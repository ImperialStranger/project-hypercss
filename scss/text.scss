@use 'sass:map';

$text-alignments: (left, right, center, justify);

@each $text-align in $text-alignments {
  
  @if $text-align == justify{
    .text-#{$text-align} {
      text-align: $text-align;
      text-justify: auto;
    }
  }
  @else {
  .text-#{$text-align} {
    text-align: $text-align;
  }
    @media all and (max-width: 480px){
      .text-sm-#{$text-align} {
        text-align: $text-align;
      }
    }
}

// Text Transformations 

$text-cases: ('upper', 'lower');

@each $case in $text-cases {
  .text-#{$case} {
    text-transform: #{$case}case;
  }
}

// Text Wrapping 

$text-wrappings: (wrap, nowrap);

@each $wrapping in $text-wrappings {
  @if $wrapping == wrap {
    .text-#{$wrapping} {
      white-space: normal !important;
    }
  }
  @else {
    .text-#{$wrapping} {
      white-space: $wrapping !important;
    }
  }
}

// Font Size 

$font-sizes: (
  1: calc(1.375rem + 1.5vw),
  2: calc(1.325rem + 0.9vw),
  3: calc(1.3rem + 0.6vw),
  4: calc(1.275rem + 0.3vw),
  5: 1.25rem,
  6: 1rem
);

@each $size, $value in $font-sizes {
  .fs-#{$size} {
    font-size: $value !important;
  }
}

// Font Weight

@for $w from 1 through 9 {
  .fweight-#{$w * 100} {
    font-weight: $w * 100 !important;
  }
}

// Font Style

$font-styles: (normal, italic);

@each $style in $font-styles {
  .fstyle-#{$style} {
    font-style: $style !important;
  }
}

// Muted Text

.txt-muted {
  opacity: 0.5;
}

// Text Decoration

$text-decorations: (underline, line-through, none);

@each $td in $text-decorations {
  .td-#{$td} {
    text-decoration: $td !important;
  }
}}